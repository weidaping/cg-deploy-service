<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tuandai.cg.html.dao.UserDao">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="com.tuandai.cg.html.model.User">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="git_username" property="gitUsername" jdbcType="VARCHAR"/>
        <result column="git_password" property="gitPassword" jdbcType="VARCHAR"/>
        <result column="user_role" property="userRole" jdbcType="VARCHAR"/>
        <result column="group_id" property="groupId" jdbcType="VARCHAR"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        id,
        username,
        password,
        git_username,
        git_password,
        user_role,
        group_id
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="user.id">
        INSERT INTO deploy_user (
            username,
            password,
            git_username,
            git_password,
            user_role,
            group_id
        ) VALUES (
            #{user.username,jdbcType=VARCHAR},
            #{user.password,jdbcType=VARCHAR},
            #{user.gitUsername,jdbcType=VARCHAR},
            #{user.gitPassword,jdbcType=VARCHAR},
            #{user.userRole,jdbcType=VARCHAR},
            #{user.groupId,jdbcType=VARCHAR}
        )
    </insert>

    <!--auto generated Code-->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="user.id">
        INSERT INTO deploy_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="user.id!=null"> id,</if>
            <if test="user.username!=null"> username,</if>
            <if test="user.password!=null"> password,</if>
            <if test="user.gitUsername!=null"> git_username,</if>
            <if test="user.gitPassword!=null"> git_password,</if>
            <if test="user.userRole!=null"> user_role,</if>
            <if test="user.groupId!=null"> group_id,</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="user.id!=null">#{user.id,jdbcType=INTEGER},
            </if>
            <if test="user.username!=null">#{user.username,jdbcType=VARCHAR},
            </if>
            <if test="user.password!=null">#{user.password,jdbcType=VARCHAR},
            </if>
            <if test="user.gitUsername!=null">#{user.gitUsername,jdbcType=VARCHAR},
            </if>
            <if test="user.gitPassword!=null">#{user.gitPassword,jdbcType=VARCHAR},
            </if>
            <if test="user.userRole!=null">#{user.userRole,jdbcType=VARCHAR},
            </if>
            <if test="user.groupId!=null">#{user.groupId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <!--auto generated Code-->
    <insert id="insertList">
        INSERT INTO deploy_user (
        <include refid="Base_Column_List"/>
        )VALUES
        <foreach collection="users" item="user" index="index" separator=",">
            (
            #{user.id,jdbcType=INTEGER},
            #{user.username,jdbcType=VARCHAR},
            #{user.password,jdbcType=VARCHAR},
            #{user.gitUsername,jdbcType=VARCHAR},
            #{user.gitPassword,jdbcType=VARCHAR},
            #{user.userRole,jdbcType=VARCHAR},
            #{user.groupId,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE deploy_user
        <set>
            <if test="user.id != null"> id= #{user.id,jdbcType=INTEGER},</if>
            <if test="user.username != null"> username= #{user.username,jdbcType=VARCHAR},</if>
            <if test="user.password != null"> password= #{user.password,jdbcType=VARCHAR},</if>
            <if test="user.gitUsername != null"> git_username= #{user.gitUsername,jdbcType=VARCHAR},</if>
            <if test="user.gitPassword != null"> git_password= #{user.gitPassword,jdbcType=VARCHAR},</if>
            <if test="user.userRole != null"> user_role= #{user.userRole,jdbcType=VARCHAR},</if>
            <if test="user.groupId != null"> group_id= #{user.groupId,jdbcType=VARCHAR}</if>
        </set>
        WHERE id = #{user.id,jdbcType=INTEGER}
    </update>

    <select id="getUserList" resultMap="BaseResultMap">
        select * from deploy_user
        <if test="username != null">
            where username = #{username}
        </if>
        <if test="offset != null and limit != null ">
            limit ${offset}, ${limit}
        </if>
    </select>

    <select id="getUserListCount" resultType="java.lang.Integer">
        select count(1) from deploy_user
        <if test="username != null">
            where username = #{username}
        </if>
    </select>

    <select id="getUserByUsername" resultMap="BaseResultMap">
      select * from deploy_user
      where username = #{username}
    </select>

    <select id="getAllUser" resultMap="BaseResultMap">
        select * from deploy_user
    </select>

</mapper>

